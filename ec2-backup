#!/bin/sh

# Jason Ajmo and Bradford Smith
# CS 615 HW6 ec2-backup

USAGE="usage: $0 [-h] [-l filter] [-r filter] [-v volume-id] dir"
REGION="us-east-1a"
VOLUME=""
LOCAL_FILTER=""
REMOTE_FILTER=""
DIR=""

usage () {
    echo "$USAGE"
    exit 1
}

help_message () {
    echo "$USAGE"
    cat<<EOF
 -h             Print this help message.
 -l filter      Pass data through the given filter command on the local host
                before copying the data to the remote system.
 -r filter      Pass data through the given filter command on the remote host
                before writing the data to the volume.
 -v volume-id   Use the given volume instead of creating a new one.
EOF
    exit 0
}

parse_input () {
    while getopts hl:r:v: flag; do
        case $flag in
            h) help_message;;
            l) LOCAL_FILTER="$OPTARG";;
            r) REMOTE_FILTER="$OPTARG";;
            v) VOLUME="$OPTARG";;
            \?) usage;;
        esac
    done
    shift $(expr $OPTIND - 1)

    [ -z "$1" ] && usage || DIR=$1
    [ -d "$DIR" ] || { echoerr "'$DIR' is not a directory"; exit 1; }
}

echoerr () {
    # same as 'echo' but print to STDERR
    1>&2 echo "$@"
}

main () {
    parse_input "$@"

    if [ "$VOLUME" = "" ]; then
		SIZE=$(/usr/bin/du -gs "$DIR" 2> /dev/null | /usr/bin/awk '{ print $1 * 2 }')
		OUTPUT=$(/usr/pkg/bin/aws ec2 create-volume --output text --availability-zone "$REGION" --size "$SIZE")
		VOLUME=$(/bin/echo "$OUTPUT" | /usr/bin/awk '{ print $6 }')
    fi

    # TODO: everything
}

# call main function
main "$@"
